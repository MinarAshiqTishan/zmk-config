/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp Q  &kp W  &kp E  &kp R      &kp T      &kp LEFT_GUI      &kp DEL    &kp Y      &kp U          &kp I      &kp O       &kp P
&kp A  &kp S  &kp D  &kp F      &kp G      &kp LEFT_ALT      &kp TAB    &kp H      &kp J          &kp K      &kp L       &kp SEMICOLON
&kp Z  &kp X  &kp C  &kp V      &kp B      &kp LEFT_SHIFT    &kp RSHFT  &kp N      &kp M          &kp COMMA  &kp PERIOD  &kp SLASH
                     &kp SPACE  &kp LCTRL  &mo 1             &mo 2      &kp ENTER  &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp LEFT_BRACKET  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE   &kp RIGHT_BRACKET    &kp UNDER     &kp N7        &kp N8        &kp N9        &kp DOLLAR      &kp TILDE
&kp HASH          &kp MINUS       &kp EQUAL             &kp PLUS               &kp SLASH         &kp STAR             &kp EXCL      &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PERCENT     &kp CARET
&kp GRAVE         &kp LESS_THAN   &kp PIPE              &kp AMPERSAND          &kp GREATER_THAN  &kp BACKSLASH        &kp AT        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp LEFT_ARROW  &kp RIGHT_ARROW
                                                        &trans                 &trans            &trans               &kp NUMBER_0  &kp COMMA     &kp PERIOD
            >;
        };

        raise_layer {
            bindings = <
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6          &kp INSERT       &kp KP_NUM     &kp PAGE_DOWN   &kp UP_ARROW    &kp PG_UP      &kp CLCK
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp RIGHT_SHIFT  &kp HOME       &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT      &kp END
&kp F7      &kp F8        &kp F9        &kp F10       &kp F11       &kp F12         &to 3            &kp BACKSPACE  &kp DEL         &kp RCTRL       &kp RIGHT_ALT  &kp RIGHT_GUI
                                        &kp LCTRL     &kp LEFT_ALT  &kp LSHIFT      &trans           &trans         &trans
            >;
        };

        gaming {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E      &kp R         &kp ESCAPE      &none   &kp KP_NUM     &kp PAGE_DOWN  &kp UP_ARROW  &kp PG_UP        &kp CLCK
&kp LSHFT  &kp A  &kp S  &kp D      &kp F         &kp G           &none   &kp HOME       &kp LEFT       &kp DOWN      &kp RIGHT_ARROW  &kp END
&kp LCTRL  &kp Z  &kp X  &kp C      &kp NUMBER_3  &kp NUMBER_4    &to 0   &kp BACKSPACE  &kp DEL        &kp RCTRL     &kp RALT         &kp RIGHT_GUI
                         &kp SPACE  &kp NUMBER_1  &kp NUMBER_2    &trans  &trans         &trans
            >;
        };
    };
};



