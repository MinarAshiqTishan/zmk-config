/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        td_layer_1: td_layer_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_LAYER_1";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&to 1>;
        };

        td_layer2: td_layer2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_LAYER2";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&to 2>;
        };

        td_layer3: td_layer3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_LAYER3";
            #binding-cells = <0>;
            bindings = <&mo 3>, <&to 3>;
        };

        td_layer4: td_layer4 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_LAYER4";
            #binding-cells = <0>;
            bindings = <&mo 4>, <&to 4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            bindings = <
&kp TAB        &kp Q  &kp W  &kp E     &kp R      &kp T         &kp Y      &kp U          &kp I       &kp O    &kp P     &kp DEL
&mt LCTRL ESC  &kp A  &kp S  &kp D     &kp F      &kp G         &kp H      &kp J          &kp K       &kp L    &kp SEMI  &kp SQT
&td_layer2     &kp Z  &kp X  &kp C     &kp V      &kp B         &kp N      &kp M          &kp COMMA   &kp DOT  &kp FSLH  &kp RMETA
                             &kp RALT  &kp SPACE  &kp LSHIFT    &kp ENTER  &kp BACKSPACE  &td_layer3
            >;
        };

        Colemak-DH {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB        &kp Q  &kp W  &kp F         &kp P      &kp B         &kp J      &kp L          &kp U      &kp Y    &kp SEMICOLON  &kp DEL
&mt LCTRL ESC  &kp A  &kp R  &kp S         &kp T      &kp G         &kp M      &kp N          &kp E      &kp I    &kp O          &kp SQT
&td_layer2     &kp Z  &kp X  &kp C         &kp D      &kp V         &kp K      &kp H          &kp COMMA  &kp DOT  &kp FSLH       &td_layer3
                             &kp LEFT_ALT  &kp SPACE  &kp LSHIFT    &kp ENTER  &kp BACKSPACE  &kp RGUI
            >;
        };

        NUM-Layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp AT     &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE   &kp PIPE         &kp UNDER      &kp N7         &kp N8        &kp N9        &kp DOLLAR  &kp TILDE
&kp HASH   &kp SLASH       &kp MINUS             &kp EQUAL              &kp PLUS          &kp STAR         &kp NUMBER_0   &kp NUMBER_4   &kp NUMBER_5  &kp NUMBER_6  &kp EXCL    &kp PERCENT
&kp GRAVE  &kp LESS_THAN   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp GREATER_THAN  &kp BACKSLASH    &kp AMPERSAND  &kp NUMBER_1   &kp NUMBER_2  &kp NUMBER_3  &kp CARET   &to 0
                                                 &kp COMMA              &kp SPACE         &mo 3            &kp ENTER      &kp BACKSPACE  &kp PERIOD
            >;
        };

        Nav_Layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp AT     &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE   &kp PIPE                &kp INSERT   &kp PG_UP      &kp LC(LEFT_ARROW)  &kp UP_ARROW    &kp LC(RIGHT)  &td_layer4
&kp HASH   &kp SLASH       &kp MINUS             &kp EQUAL              &kp PLUS          &kp STAR                &kp CAPS     &kp HOME       &kp LEFT_ARROW      &kp DOWN_ARROW  &kp RIGHT      &kp END
&kp GRAVE  &kp LESS_THAN   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp GREATER_THAN  &kp NON_US_BACKSLASH    &td_layer_1  &kp PAGE_DOWN  &kp LA(LEFT)        &td_layer4      &kp LA(RIGHT)  &to 0
                                                 &kp LEFT_ALT           &kp LCMD          &kp LSHIFT              &to 0        &kp RIGHT_ALT  &none
            >;
        };

        Functions {
            bindings = <
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6          &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans   &trans   &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans   &trans   &to 0
                                        &trans        &kp LEFT_ALT  &trans          &trans  &trans  &trans
            >;
        };
    };
};
